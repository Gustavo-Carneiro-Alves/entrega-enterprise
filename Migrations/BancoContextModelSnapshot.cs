// <auto-generated />
using System;
using GS_GreenCycle.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GSGreenCycle.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BicicletaModelReservaModel", b =>
                {
                    b.Property<int>("BicicletasId")
                        .HasColumnType("int");

                    b.Property<int>("ReservasId")
                        .HasColumnType("int");

                    b.HasKey("BicicletasId", "ReservasId");

                    b.HasIndex("ReservasId");

                    b.ToTable("BicicletaModelReservaModel");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.BicicletaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpresaModelId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaModelId");

                    b.ToTable("Bicicletas");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cnpj")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.PatineteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpresaModelId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaModelId");

                    b.ToTable("Patinetes");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.PatinsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpresaModelId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaModelId");

                    b.ToTable("Patins");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.ReservaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("dtEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtRetirada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hrEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hrRetirada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BicicletaId")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("DtNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BicicletaId")
                        .IsUnique()
                        .HasFilter("[BicicletaId] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BicicletaModelReservaModel", b =>
                {
                    b.HasOne("GS_GreenCycle.Models.BicicletaModel", null)
                        .WithMany()
                        .HasForeignKey("BicicletasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS_GreenCycle.Models.ReservaModel", null)
                        .WithMany()
                        .HasForeignKey("ReservasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GS_GreenCycle.Models.BicicletaModel", b =>
                {
                    b.HasOne("GS_GreenCycle.Models.EmpresaModel", null)
                        .WithMany("bicicletas")
                        .HasForeignKey("EmpresaModelId");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.PatineteModel", b =>
                {
                    b.HasOne("GS_GreenCycle.Models.EmpresaModel", null)
                        .WithMany("patinetes")
                        .HasForeignKey("EmpresaModelId");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.PatinsModel", b =>
                {
                    b.HasOne("GS_GreenCycle.Models.EmpresaModel", null)
                        .WithMany("patins")
                        .HasForeignKey("EmpresaModelId");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.ReservaModel", b =>
                {
                    b.HasOne("GS_GreenCycle.Models.UsuarioModel", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.UsuarioModel", b =>
                {
                    b.HasOne("GS_GreenCycle.Models.BicicletaModel", "Bicicleta")
                        .WithOne("Usuario")
                        .HasForeignKey("GS_GreenCycle.Models.UsuarioModel", "BicicletaId");

                    b.Navigation("Bicicleta");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.BicicletaModel", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.EmpresaModel", b =>
                {
                    b.Navigation("bicicletas");

                    b.Navigation("patinetes");

                    b.Navigation("patins");
                });

            modelBuilder.Entity("GS_GreenCycle.Models.UsuarioModel", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
